package lostworlds.server.biome;

import static lostworlds.server.biome.ModConfiguredFeatures.register;
import static lostworlds.server.util.GeneralGetter.getStateWhenCan;

import java.util.function.Supplier;

import lostworlds.client.LostWorldsConfig;
import lostworlds.server.block.Damage;
import lostworlds.server.block.Egg;
import lostworlds.server.block.LostWorldsBlocks;
import lostworlds.server.block.PlantFossilBlock;
import lostworlds.server.block.Plants;
import lostworlds.server.block.SoftDirtBlock;
import lostworlds.server.entity.utils.enums.TimeEras;
import lostworlds.server.placement.LostWorldsPlacements;
import net.minecraft.block.Blocks;
import net.minecraft.world.gen.feature.ConfiguredFeature;
import net.minecraft.world.gen.feature.Feature;
import net.minecraft.world.gen.feature.OreFeatureConfig;
import net.minecraft.world.gen.feature.ReplaceBlockConfig;
import net.minecraft.world.gen.placement.DepthAverageConfig;
import net.minecraft.world.gen.placement.IPlacementConfig;
import net.minecraft.world.gen.placement.NoPlacementConfig;
import net.minecraft.world.gen.placement.Placement;
import net.minecraft.world.gen.placement.TopSolidRangeConfig;

public class OreFeatures {
	// Overworld
	public static final Supplier<ConfiguredFeature<?, ?>> COPPER_ORE = () -> register("copper_ore", Feature.ORE.configured(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.NATURAL_STONE, getStateWhenCan(LostWorldsBlocks.COPPER_ORE), LostWorldsConfig.COMMON_CONFIG.copperVeinSize.get())).range(LostWorldsConfig.COMMON_CONFIG.copperRange.get()).squared().count(LostWorldsConfig.COMMON_CONFIG.copperCountPerChunk.get()));
	public static final Supplier<ConfiguredFeature<?, ?>> SILT_PATCH = () -> register("silt_patch", Feature.ORE.configured(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.NATURAL_STONE, LostWorldsBlocks.SILT.getDefaultState(), LostWorldsConfig.COMMON_CONFIG.siltVeinSize.get())).range(LostWorldsConfig.COMMON_CONFIG.siltRange.get()).squared().count(LostWorldsConfig.COMMON_CONFIG.siltCountPerChunk.get()));

	public static final Supplier<ConfiguredFeature<?, ?>> PETRIFIED_ARAUCARIA = () -> register("petrified_araucaria", Feature.EMERALD_ORE.configured(new ReplaceBlockConfig(Blocks.STONE.defaultBlockState(), getStateWhenCan(LostWorldsBlocks.PETRIFIED_ARAUCARIA_LOG))).decorated(Placement.EMERALD_ORE.configured(IPlacementConfig.NONE).chance(LostWorldsConfig.COMMON_CONFIG.petrifiedAraucariaChance.get())));
	public static final Supplier<ConfiguredFeature<?, ?>> PETRIFIED_CALAMITES = () -> register("petrified_calamties", Feature.EMERALD_ORE.configured(new ReplaceBlockConfig(Blocks.STONE.defaultBlockState(), getStateWhenCan(LostWorldsBlocks.PETRIFIED_CALAMITES_LOG))).decorated(Placement.EMERALD_ORE.configured(IPlacementConfig.NONE).chance(LostWorldsConfig.COMMON_CONFIG.petrifiedCalamitesChance.get())));
	public static final Supplier<ConfiguredFeature<?, ?>> PETRIFIED_CONIFER = () -> register("petrified_conifer", Feature.EMERALD_ORE.configured(new ReplaceBlockConfig(Blocks.STONE.defaultBlockState(), getStateWhenCan(LostWorldsBlocks.PETRIFIED_CONIFER_LOG))).decorated(Placement.EMERALD_ORE.configured(IPlacementConfig.NONE).chance(LostWorldsConfig.COMMON_CONFIG.petrifiedConiferChance.get())));
	public static final Supplier<ConfiguredFeature<?, ?>> PETRIFIED_GINKGO = () -> register("petrified_ginkgo", Feature.EMERALD_ORE.configured(new ReplaceBlockConfig(Blocks.STONE.defaultBlockState(), getStateWhenCan(LostWorldsBlocks.PETRIFIED_GINKGO_LOG))).decorated(Placement.EMERALD_ORE.configured(IPlacementConfig.NONE).chance(LostWorldsConfig.COMMON_CONFIG.petrifiedGinkgoChance.get())));

	public static final Supplier<ConfiguredFeature<?, ?>> OVERWORLD_AMBER_ORE = () -> register("overworld_amber_ore", Feature.ORE.configured(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.NATURAL_STONE, getStateWhenCan(LostWorldsBlocks.AMBER_ORE), LostWorldsConfig.COMMON_CONFIG.amberVeinSize.get())).range(LostWorldsConfig.COMMON_CONFIG.amberRange.get()).squared().count(LostWorldsConfig.COMMON_CONFIG.amberCountPerChunk.get()));

	public static final Supplier<ConfiguredFeature<?, ?>> OVERWORLD_PLANT_FOSSIL_ALETHOPTERIS = () -> register("overworld_plant_fossil_alethopteris", Feature.EMERALD_ORE.configured(new ReplaceBlockConfig(Blocks.STONE.defaultBlockState(), getStateWhenCan(LostWorldsBlocks.PLANT_FOSSIL).setValue(PlantFossilBlock.ERA, TimeEras.MODERN_MINECRAFT).setValue(PlantFossilBlock.POTENTIAL_PLANT, Plants.ALETHOPTERIS).setValue(PlantFossilBlock.DAMAGE, Damage.NONE))).decorated(Placement.EMERALD_ORE.configured(IPlacementConfig.NONE).chance(LostWorldsConfig.COMMON_CONFIG.plantFossilChance.get())));
	public static final Supplier<ConfiguredFeature<?, ?>> OVERWORLD_PLANT_FOSSIL_BRAZILEA = () -> register("overworld_plant_fossil_brazilea", Feature.EMERALD_ORE.configured(new ReplaceBlockConfig(Blocks.STONE.defaultBlockState(), getStateWhenCan(LostWorldsBlocks.PLANT_FOSSIL).setValue(PlantFossilBlock.ERA, TimeEras.MODERN_MINECRAFT).setValue(PlantFossilBlock.POTENTIAL_PLANT, Plants.BRAZILEA).setValue(PlantFossilBlock.DAMAGE, Damage.NONE))).decorated(Placement.EMERALD_ORE.configured(IPlacementConfig.NONE).chance(LostWorldsConfig.COMMON_CONFIG.plantFossilChance.get())));
	public static final Supplier<ConfiguredFeature<?, ?>> OVERWORLD_PLANT_FOSSIL_CALAMITES_SUCKOWII = () -> register("overworld_plant_fossil_calamites_suckowii", Feature.EMERALD_ORE.configured(new ReplaceBlockConfig(Blocks.STONE.defaultBlockState(), getStateWhenCan(LostWorldsBlocks.PLANT_FOSSIL).setValue(PlantFossilBlock.ERA, TimeEras.MODERN_MINECRAFT).setValue(PlantFossilBlock.POTENTIAL_PLANT, Plants.CALAMITES_SUCKOWII).setValue(PlantFossilBlock.DAMAGE, Damage.NONE))).decorated(Placement.EMERALD_ORE.configured(IPlacementConfig.NONE).chance(LostWorldsConfig.COMMON_CONFIG.plantFossilChance.get())));
	public static final Supplier<ConfiguredFeature<?, ?>> OVERWORLD_PLANT_FOSSIL_CEPHALOTAXUS = () -> register("overworld_plant_fossil_cephalotaxus", Feature.EMERALD_ORE.configured(new ReplaceBlockConfig(Blocks.STONE.defaultBlockState(), getStateWhenCan(LostWorldsBlocks.PLANT_FOSSIL).setValue(PlantFossilBlock.ERA, TimeEras.MODERN_MINECRAFT).setValue(PlantFossilBlock.POTENTIAL_PLANT, Plants.CEPHALOTAXUS).setValue(PlantFossilBlock.DAMAGE, Damage.NONE))).decorated(Placement.EMERALD_ORE.configured(IPlacementConfig.NONE).chance(LostWorldsConfig.COMMON_CONFIG.plantFossilChance.get())));
	public static final Supplier<ConfiguredFeature<?, ?>> OVERWORLD_PLANT_FOSSIL_DILLHOFFIA = () -> register("overworld_plant_fossil_dillhoffia", Feature.EMERALD_ORE.configured(new ReplaceBlockConfig(Blocks.STONE.defaultBlockState(), getStateWhenCan(LostWorldsBlocks.PLANT_FOSSIL).setValue(PlantFossilBlock.ERA, TimeEras.MODERN_MINECRAFT).setValue(PlantFossilBlock.POTENTIAL_PLANT, Plants.DILLHOFFIA).setValue(PlantFossilBlock.DAMAGE, Damage.NONE))).decorated(Placement.EMERALD_ORE.configured(IPlacementConfig.NONE).chance(LostWorldsConfig.COMMON_CONFIG.plantFossilChance.get())));
	public static final Supplier<ConfiguredFeature<?, ?>> OVERWORLD_PLANT_FOSSIL_DUISBERGIA = () -> register("overworld_plant_fossil_duisbergia", Feature.EMERALD_ORE.configured(new ReplaceBlockConfig(Blocks.STONE.defaultBlockState(), getStateWhenCan(LostWorldsBlocks.PLANT_FOSSIL).setValue(PlantFossilBlock.ERA, TimeEras.MODERN_MINECRAFT).setValue(PlantFossilBlock.POTENTIAL_PLANT, Plants.DUISBERGIA).setValue(PlantFossilBlock.DAMAGE, Damage.NONE))).decorated(Placement.EMERALD_ORE.configured(IPlacementConfig.NONE).chance(LostWorldsConfig.COMMON_CONFIG.plantFossilChance.get())));
	public static final Supplier<ConfiguredFeature<?, ?>> OVERWORLD_PLANT_FOSSIL_OSMUNDA = () -> register("overworld_plant_fossil_osmunda", Feature.EMERALD_ORE.configured(new ReplaceBlockConfig(Blocks.STONE.defaultBlockState(), getStateWhenCan(LostWorldsBlocks.PLANT_FOSSIL).setValue(PlantFossilBlock.ERA, TimeEras.MODERN_MINECRAFT).setValue(PlantFossilBlock.POTENTIAL_PLANT, Plants.OSMUNDA).setValue(PlantFossilBlock.DAMAGE, Damage.NONE))).decorated(Placement.EMERALD_ORE.configured(IPlacementConfig.NONE).chance(LostWorldsConfig.COMMON_CONFIG.plantFossilChance.get())));
	public static final Supplier<ConfiguredFeature<?, ?>> OVERWORLD_PLANT_FOSSIL_WILLIAMSONIA = () -> register("overworld_plant_fossil_williamsonia", Feature.EMERALD_ORE.configured(new ReplaceBlockConfig(Blocks.STONE.defaultBlockState(), getStateWhenCan(LostWorldsBlocks.PLANT_FOSSIL).setValue(PlantFossilBlock.ERA, TimeEras.MODERN_MINECRAFT).setValue(PlantFossilBlock.POTENTIAL_PLANT, Plants.WILLIAMSONIA).setValue(PlantFossilBlock.DAMAGE, Damage.NONE))).decorated(Placement.EMERALD_ORE.configured(IPlacementConfig.NONE).chance(LostWorldsConfig.COMMON_CONFIG.plantFossilChance.get())));
	public static final Supplier<ConfiguredFeature<?, ?>> OVERWORLD_PLANT_FOSSIL_ZAMITES = () -> register("overworld_plant_fossil_zamites", Feature.EMERALD_ORE.configured(new ReplaceBlockConfig(Blocks.STONE.defaultBlockState(), getStateWhenCan(LostWorldsBlocks.PLANT_FOSSIL).setValue(PlantFossilBlock.ERA, TimeEras.MODERN_MINECRAFT).setValue(PlantFossilBlock.POTENTIAL_PLANT, Plants.ZAMITES).setValue(PlantFossilBlock.DAMAGE, Damage.NONE))).decorated(Placement.EMERALD_ORE.configured(IPlacementConfig.NONE).chance(LostWorldsConfig.COMMON_CONFIG.plantFossilChance.get())));

	public static final Supplier<ConfiguredFeature<?, ?>> OVERWORLD_TINY_NEST = () -> register("overworld_tiny_nest", Feature.EMERALD_ORE.configured(new ReplaceBlockConfig(Blocks.DIRT.defaultBlockState(), getStateWhenCan(LostWorldsBlocks.SOFT_DIRT).setValue(SoftDirtBlock.EGG, Egg.TINY))).decorated(LostWorldsPlacements.NEST.configured(IPlacementConfig.NONE)).chance(LostWorldsConfig.COMMON_CONFIG.fossilChance.get()));
	public static final Supplier<ConfiguredFeature<?, ?>> OVERWORLD_SMALL_NEST = () -> register("overworld_small_nest", Feature.EMERALD_ORE.configured(new ReplaceBlockConfig(Blocks.DIRT.defaultBlockState(), getStateWhenCan(LostWorldsBlocks.SOFT_DIRT).setValue(SoftDirtBlock.EGG, Egg.SMALL))).decorated(LostWorldsPlacements.NEST.configured(IPlacementConfig.NONE)).chance(LostWorldsConfig.COMMON_CONFIG.fossilChance.get()));
	public static final Supplier<ConfiguredFeature<?, ?>> OVERWORLD_MEDIUM_NEST = () -> register("overworld_medium_nest", Feature.EMERALD_ORE.configured(new ReplaceBlockConfig(Blocks.DIRT.defaultBlockState(), getStateWhenCan(LostWorldsBlocks.SOFT_DIRT).setValue(SoftDirtBlock.EGG, Egg.MEDIUM))).decorated(LostWorldsPlacements.NEST.configured(IPlacementConfig.NONE)).chance(LostWorldsConfig.COMMON_CONFIG.fossilChance.get()));
	public static final Supplier<ConfiguredFeature<?, ?>> OVERWORLD_LARGE_NEST = () -> register("overworld_large_nest", Feature.EMERALD_ORE.configured(new ReplaceBlockConfig(Blocks.DIRT.defaultBlockState(), getStateWhenCan(LostWorldsBlocks.SOFT_DIRT).setValue(SoftDirtBlock.EGG, Egg.LARGE))).decorated(LostWorldsPlacements.NEST.configured(IPlacementConfig.NONE)).chance(LostWorldsConfig.COMMON_CONFIG.fossilChance.get()));

	// Permian
	public static final Supplier<ConfiguredFeature<?, ?>> PERMIAN_MAGMA_ORE = () -> register("permian_magma_ore", Feature.ORE.configured(new OreFeatureConfig(ModBlockFillerTypes.PERMIAN_STONE.get(), Blocks.MAGMA_BLOCK.defaultBlockState(), 33)).decorated(Placement.MAGMA.configured(NoPlacementConfig.INSTANCE)).squared().count(4));

	public static final Supplier<ConfiguredFeature<?, ?>> PERMIAN_COAL_ORE = () -> register("permian_coal_ore", Feature.ORE.configured(new OreFeatureConfig(ModBlockFillerTypes.PERMIAN_STONE.get(), getStateWhenCan(LostWorldsBlocks.PERMIAN_COAL_ORE), 17)).range(128).squared().count(20));
	public static final Supplier<ConfiguredFeature<?, ?>> PERMIAN_IRON_ORE = () -> register("permian_iron_ore", Feature.ORE.configured(new OreFeatureConfig(ModBlockFillerTypes.PERMIAN_STONE.get(), getStateWhenCan(LostWorldsBlocks.PERMIAN_IRON_ORE), 9)).range(64).squared().count(20));
	public static final Supplier<ConfiguredFeature<?, ?>> PERMIAN_GOLD_ORE = () -> register("permian_gold_ore", Feature.ORE.configured(new OreFeatureConfig(ModBlockFillerTypes.PERMIAN_STONE.get(), getStateWhenCan(LostWorldsBlocks.PERMIAN_GOLD_ORE), 9)).range(32).squared().count(2));
	public static final Supplier<ConfiguredFeature<?, ?>> PERMIAN_REDSTONE_ORE = () -> register("permian_redstone_ore", Feature.ORE.configured(new OreFeatureConfig(ModBlockFillerTypes.PERMIAN_STONE.get(), getStateWhenCan(LostWorldsBlocks.PERMIAN_REDSTONE_ORE), 8)).range(16).squared().count(8));
	public static final Supplier<ConfiguredFeature<?, ?>> PERMIAN_DIAMOND_ORE = () -> register("permian_diamond_ore", Feature.ORE.configured(new OreFeatureConfig(ModBlockFillerTypes.PERMIAN_STONE.get(), getStateWhenCan(LostWorldsBlocks.PERMIAN_DIAMOND_ORE), 8)).range(16).squared());
	public static final Supplier<ConfiguredFeature<?, ?>> PERMIAN_LAPIS_ORE = () -> register("permian_lapis_ore", Feature.ORE.configured(new OreFeatureConfig(ModBlockFillerTypes.PERMIAN_STONE.get(), getStateWhenCan(LostWorldsBlocks.PERMIAN_LAPIS_ORE), 7)).decorated(Placement.DEPTH_AVERAGE.configured(new DepthAverageConfig(16, 16))).squared());
	public static final Supplier<ConfiguredFeature<?, ?>> PERMIAN_EMERALD_ORE = () -> register("permian_emerald_ore", Feature.EMERALD_ORE.configured(new ReplaceBlockConfig(getStateWhenCan(LostWorldsBlocks.PERMIAN_STONE), getStateWhenCan(LostWorldsBlocks.PERMIAN_EMERALD_ORE))).decorated(Placement.EMERALD_ORE.configured(IPlacementConfig.NONE)));
	public static final Supplier<ConfiguredFeature<?, ?>> PERMIAN_COPPER_ORE = () -> register("permian_copper_ore", Feature.ORE.configured(new OreFeatureConfig(ModBlockFillerTypes.PERMIAN_STONE.get(), getStateWhenCan(LostWorldsBlocks.PERMIAN_COPPER_ORE), LostWorldsConfig.COMMON_CONFIG.copperVeinSize.get())).range(LostWorldsConfig.COMMON_CONFIG.copperRange.get()).squared().count(LostWorldsConfig.COMMON_CONFIG.copperCountPerChunk.get()));

	public static final Supplier<ConfiguredFeature<?, ?>> PERMIAN_DIRT_ORE = () -> register("permian_dirt_ore", Feature.ORE.configured(new OreFeatureConfig(ModBlockFillerTypes.PERMIAN_STONE.get(), Blocks.DIRT.defaultBlockState(), 33)).range(256).squared().count(10));
	public static final Supplier<ConfiguredFeature<?, ?>> PERMIAN_GRAVEL_ORE = () -> register("permian_gravel_ore", Feature.ORE.configured(new OreFeatureConfig(ModBlockFillerTypes.PERMIAN_STONE.get(), Blocks.GRAVEL.defaultBlockState(), 33)).range(256).squared().count(8));

	public static final Supplier<ConfiguredFeature<?, ?>> PERMIAN_LATERLITE_ORE = () -> register("permian_laterlite_ore", Feature.ORE.configured(new OreFeatureConfig(ModBlockFillerTypes.PERMIAN_STONE.get(), getStateWhenCan(LostWorldsBlocks.LATERLITE), 33)).range(256).squared().count(10));
	public static final Supplier<ConfiguredFeature<?, ?>> PERMIAN_RAW_MARBLE_ORE = () -> register("permian_raw_marble_ore", Feature.ORE.configured(new OreFeatureConfig(ModBlockFillerTypes.PERMIAN_STONE.get(), getStateWhenCan(LostWorldsBlocks.RAW_MARBLE), 33)).range(256).squared().count(8));
	public static final Supplier<ConfiguredFeature<?, ?>> PERMIAN_LIMESTONE_ORE = () -> register("permian_limestone_ore", Feature.ORE.configured(new OreFeatureConfig(ModBlockFillerTypes.PERMIAN_STONE.get(), getStateWhenCan(LostWorldsBlocks.LIMESTONE), 33)).range(256).squared().count(8));

	// Jurassic
	public static final Supplier<ConfiguredFeature<?, ?>> JURASSIC_MAGMA_ORE = () -> register("jurassic_magma_ore", Feature.ORE.configured(new OreFeatureConfig(ModBlockFillerTypes.JURASSIC_STONE.get(), Blocks.MAGMA_BLOCK.defaultBlockState(), 33)).decorated(Placement.MAGMA.configured(NoPlacementConfig.INSTANCE)).squared().count(4));

	public static final Supplier<ConfiguredFeature<?, ?>> JURASSIC_COAL_ORE = () -> register("jurassic_coal_ore", Feature.ORE.configured(new OreFeatureConfig(ModBlockFillerTypes.JURASSIC_STONE.get(), getStateWhenCan(LostWorldsBlocks.JURASSIC_COAL_ORE), 17)).range(128).squared().count(20));
	public static final Supplier<ConfiguredFeature<?, ?>> JURASSIC_IRON_ORE = () -> register("jurassic_iron_ore", Feature.ORE.configured(new OreFeatureConfig(ModBlockFillerTypes.JURASSIC_STONE.get(), getStateWhenCan(LostWorldsBlocks.JURASSIC_IRON_ORE), 9)).range(64).squared().count(20));
	public static final Supplier<ConfiguredFeature<?, ?>> JURASSIC_GOLD_ORE = () -> register("jurassic_gold_ore", Feature.ORE.configured(new OreFeatureConfig(ModBlockFillerTypes.JURASSIC_STONE.get(), getStateWhenCan(LostWorldsBlocks.JURASSIC_GOLD_ORE), 9)).range(32).squared().count(2));
	public static final Supplier<ConfiguredFeature<?, ?>> JURASSIC_REDSTONE_ORE = () -> register("jurassic_redstone_ore", Feature.ORE.configured(new OreFeatureConfig(ModBlockFillerTypes.JURASSIC_STONE.get(), getStateWhenCan(LostWorldsBlocks.JURASSIC_REDSTONE_ORE), 8)).range(16).squared().count(8));
	public static final Supplier<ConfiguredFeature<?, ?>> JURASSIC_DIAMOND_ORE = () -> register("jurassic_diamond_ore", Feature.ORE.configured(new OreFeatureConfig(ModBlockFillerTypes.JURASSIC_STONE.get(), getStateWhenCan(LostWorldsBlocks.JURASSIC_DIAMOND_ORE), 8)).range(16).squared());
	public static final Supplier<ConfiguredFeature<?, ?>> JURASSIC_LAPIS_ORE = () -> register("jurassic_lapis_ore", Feature.ORE.configured(new OreFeatureConfig(ModBlockFillerTypes.JURASSIC_STONE.get(), getStateWhenCan(LostWorldsBlocks.JURASSIC_LAPIS_ORE), 7)).decorated(Placement.DEPTH_AVERAGE.configured(new DepthAverageConfig(16, 16))).squared());
	public static final Supplier<ConfiguredFeature<?, ?>> JURASSIC_EMERALD_ORE = () -> register("jurassic_emerald_ore", Feature.EMERALD_ORE.configured(new ReplaceBlockConfig(getStateWhenCan(LostWorldsBlocks.JURASSIC_STONE), getStateWhenCan(LostWorldsBlocks.JURASSIC_EMERALD_ORE))).decorated(Placement.EMERALD_ORE.configured(IPlacementConfig.NONE)));
	public static final Supplier<ConfiguredFeature<?, ?>> JURASSIC_COPPER_ORE = () -> register("jurassic_copper_ore", Feature.ORE.configured(new OreFeatureConfig(ModBlockFillerTypes.JURASSIC_STONE.get(), getStateWhenCan(LostWorldsBlocks.JURASSIC_COPPER_ORE), LostWorldsConfig.COMMON_CONFIG.copperVeinSize.get())).range(LostWorldsConfig.COMMON_CONFIG.copperRange.get()).squared().count(LostWorldsConfig.COMMON_CONFIG.copperCountPerChunk.get()));

	public static final Supplier<ConfiguredFeature<?, ?>> JURASSIC_DIRT_ORE = () -> register("jurassic_dirt_ore", Feature.ORE.configured(new OreFeatureConfig(ModBlockFillerTypes.JURASSIC_STONE.get(), Blocks.DIRT.defaultBlockState(), 33)).range(256).squared().count(10));
	public static final Supplier<ConfiguredFeature<?, ?>> JURASSIC_GRAVEL_ORE = () -> register("jurassic_gravel_ore", Feature.ORE.configured(new OreFeatureConfig(ModBlockFillerTypes.JURASSIC_STONE.get(), Blocks.GRAVEL.defaultBlockState(), 33)).range(256).squared().count(8));

	public static final Supplier<ConfiguredFeature<?, ?>> JURASSIC_LATERLITE_ORE = () -> register("jurassic_laterlite_ore", Feature.ORE.configured(new OreFeatureConfig(ModBlockFillerTypes.JURASSIC_STONE.get(), getStateWhenCan(LostWorldsBlocks.LATERLITE), 33)).range(256).squared().count(10));
	public static final Supplier<ConfiguredFeature<?, ?>> JURASSIC_RAW_MARBLE_ORE = () -> register("jurassic_raw_marble_ore", Feature.ORE.configured(new OreFeatureConfig(ModBlockFillerTypes.JURASSIC_STONE.get(), getStateWhenCan(LostWorldsBlocks.RAW_MARBLE), 33)).range(256).squared().count(8));
	public static final Supplier<ConfiguredFeature<?, ?>> JURASSIC_LIMESTONE_ORE = () -> register("jurassic_limestone_ore", Feature.ORE.configured(new OreFeatureConfig(ModBlockFillerTypes.JURASSIC_STONE.get(), getStateWhenCan(LostWorldsBlocks.LIMESTONE), 33)).range(256).squared().count(8));

	// Creataceous
	public static final Supplier<ConfiguredFeature<?, ?>> CRETACEOUS_MAGMA_ORE = () -> register("cretaceous_magma_ore", Feature.ORE.configured(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.NATURAL_STONE, Blocks.MAGMA_BLOCK.defaultBlockState(), 33)).decorated(Placement.MAGMA.configured(NoPlacementConfig.INSTANCE)).squared().count(4));

	// Mixed Era
	public static final Supplier<ConfiguredFeature<?, ?>> BASALT_DIAMOND_ORE = () -> register("basalt_diamond_ore", Feature.ORE.configured(new OreFeatureConfig(ModBlockFillerTypes.BASALT.get(), getStateWhenCan(LostWorldsBlocks.BASALT_DIAMOND_ORE), 10)).decorated(Placement.RANGE.configured(new TopSolidRangeConfig(40, 0, 100))).squared().count(30));
}
