buildscript {
	repositories {
		maven { url = 'https://maven.minecraftforge.net' }
		mavenCentral()
		jcenter()
		maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
	}
	dependencies {
		classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: "${forgegradle_version}", changing: true
		classpath group: 'org.spongepowered', name: 'mixingradle', version: "${mixingradle_version}"
	}
}

plugins {
	id 'com.github.johnrengelman.shadow' version "${shadow_version}"
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'
apply from: 'https://raw.githubusercontent.com/SizableShrimp/Forge-Class-Remapper/main/classremapper.gradle'

version = 'alpha.11'
group = 'lostworlds'
archivesBaseName = 'lostworlds'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
	mappings channel: 'official', version: "1.18.2"
	
	accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
	
	runs {
		client {
			workingDirectory project.file('run')
			
			arg '-mixin.config=lostworlds.mixins.json'
			property 'mixin.env.remapRefMap', 'true'
			property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

			mods {
				lostworlds {
					source sourceSets.main
				}
			}
		}
		
		data {
			workingDirectory project.file('run')
			
			property 'mixin.env.remapRefMap', 'true'
			property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
			args '--mod', 'lostworlds', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
			
			mods {
				lostworlds {
					source sourceSets.main
				}
			}
		}
	}
}

sourceSets.main.resources { 
	srcDir 'src/generated/resources' 
}

mixin {
	add sourceSets.main, 'lostworlds.mixins.refmap.json'
	config 'lostworlds.mixins.json'
}

repositories {
	// Gecko
	maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
	// JEI
	maven { url 'https://dvs1.progwml6.com/files/maven' }
	// Craft Tweaker
	maven { url 'https://maven.blamejared.com' }
	// Registrate
	maven { url 'https://maven.tterrag.com/' }
	// REI 	
	maven { url 'https://maven.shedaniel.me' }
}	

configurations {
	shade
}

dependencies {
	minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
	
	def registrate = "com.tterrag.registrate:Registrate:MC${minecraft_version}-${registrate_version}"
	implementation fg.deobf(registrate)
	shade registrate
	
	compileOnly fg.deobf("mezz.jei:jei-${minecraft_version}:${jei_version}:api")
	runtimeOnly fg.deobf("mezz.jei:jei-${minecraft_version}:${jei_version}")
	
	compileOnly fg.deobf("com.blamejared.crafttweaker:CraftTweaker-forge-${minecraft_version}:${crafttweaker_version}")
	
	implementation fg.deobf("software.bernie.geckolib:geckolib-1.18-forge:${geckolib_verison}")
	
	annotationProcessor "org.spongepowered:mixin:${mixin_version}:processor"
}

jar {
	manifest {
		attributes([
			"Specification-Title": "lostworlds",
			"Specification-Vendor": "Willatendo",
			"Specification-Version": "1",
			"Implementation-Title": project.name,
			"Implementation-Version": "alpha.11",
			"Implementation-Vendor" :"Willatendo",
			"Implementation-Timestamp" : new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
			"MixinConfigs": "lostworlds.mixins.json"
		])
	}
}

shadowJar {
    classifier = ''
    configurations = [project.configurations.shade]
    relocate 'com.tterrag.registrate', 'lostworlds.repack.registrate'
}

reobf {
    shadowJar {}
}


build.dependsOn shadowJar
build.dependsOn reobfShadowJar

jar.finalizedBy('reobfJar')